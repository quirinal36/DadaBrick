<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="products_sql">
	<insert id="insert" parameterType="products" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO products
		(
			menuId,
			name,
			orderNum,
			primaryId,
			size,
			packaging,
			delivery,
			color,
			material
			<if test="representImage > 0">
			,
			representImage
			</if>
			
		)
		values
		(
			${menuId},
			'${name}',
			IFNULL((SELECT MAX(p.orderNum)+1 FROM products p where p.menuId = ${menuId}),0),		
			'${primaryId}',
			'${size}',
			'${packaging}',
			'${delivery}',
			'${color}',
			'${material}'
			<if test="representImage > 0">
			,
			${representImage}
			</if>
		)
	</insert>
	<update id="update" parameterType="products">
		UPDATE products
		<set>
			orderNum = ${orderNum},
			menuId = ${menuId},
			name = '${name}',
			primaryId = '${primaryId}',
			size = '${size}',
			packaging = '${packaging}',
			delivery = '${delivery}',
			color = '${color}',
			material = '${material}',
			representImage = ${representImage}
		</set>
		<where>
			id=${id}
		</where>
	</update>
	<select id="select" parameterType="products" resultType="products">
		SELECT 
			p.*,
			menu.name AS menuName
		FROM 
			products p LEFT JOIN menus menu ON (p.menuId = menu.id)
		<where>
			<if test="menuId > 0">
			p.menuId = (SELECT menuNum FROM menus WHERE id = ${menuId})
			</if>
			<if test="query != ''">
			and 
				(
				p.name like '%${query}%'
				or
				p.primaryId like '%${query}%'
				)
			</if>
			and orderNum >= 0
		</where>
		order by p.orderNum desc
		LIMIT ${from}, ${pageSize}
	</select>
	
	<select id="count" parameterType="products" resultType="int">
		SELECT COUNT(*) FROM products
		<where>
			<if test="menuId > 0">
			menuId = (SELECT menuNum FROM menus WHERE id = ${menuId})
			and
			</if>
			<if test="@dada.brick.com.util.StringUtil@notEmpty(query)">
				name like '%${query}%'
				or
				primaryId like '%${query}%'
			and
			</if>
			orderNum >= 0
		</where>
	</select>
	
	<select id="select_one" parameterType="products" resultType="products">
		SELECT 
			p.*,
			menu.name AS menuName,
			menu.parentId AS parentId
		FROM 
			products p LEFT JOIN menus menu ON (p.menuId = menu.id)
		<where>
			p.id = ${id}
		</where>
	</select>
	
	<select id="select_prev" parameterType="products" resultType="products">
		SELECT *
		FROM
			products
		WHERE
			menuId = ${menuId}
			and
			orderNum = (SELECT MIN(orderNum) FROM products WHERE orderNum &gt; ${orderNum} and menuId = ${menuId})
			
	</select>
	
	<select id="select_next" parameterType="products" resultType="products">
		SELECT *
		FROM
			products
		WHERE
			menuId = ${menuId}
			and
			orderNum = 
				(
				SELECT MAX(p.orderNum) 
				FROM products p
				WHERE 
					orderNum &lt; ${orderNum} 
					and 
					menuId = ${menuId}
				)
	</select>
	
	<update id="update_list" parameterType="java.util.List">
		UPDATE products
		<set>
			orderNum =
			<foreach collection="list" item="item" open="CASE" close="END">
				WHEN id = ${item.id} THEN ${item.orderNum}
			</foreach> 
		</set>
		<where>
			id IN
			<foreach collection="list" item="item" open="(" close=")" separator=",">
				${item.id}
			</foreach>
		</where>
	</update>
	
</mapper>